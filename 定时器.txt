#include "define_all.h"  #include "bsp_uart.h"uint32_t cnt_1k_Hz = 0;void LPTIMER_COMM_TIMER_DEMO_init(void)//LPTIMER普通定时器示例程序初始化{	LPTIM_InitTypeDef init_para;	//普通定时器无需配置GPIO	//使能LPTIMER的外设时钟	RCC_PERCLK_SetableEx( LPTFCLK, 		ENABLE );		//LPTIM功能时钟使能	RCC_PERCLK_SetableEx( LPTRCLK, 		ENABLE );		//LPTIM总线时钟使能		init_para.LPTIM_TMODE = LPTIM_LPTCFG_TMODE_PWMIM;//设置工作模式为带波形输出的普通定时器模式	init_para.LPTIM_MODE = LPTIM_LPTCFG_MODE_CONTINUE;//设置计数模式为连续计数模式	init_para.LPTIM_PWM = LPTIM_LPTCFG_PWM_PWM;//选择脉宽编码调制方式	init_para.LPTIM_POLAR = LPTIM_LPTCFG_POLARITY_POS;//第一次计数值=比较值是产生上升沿	init_para.LPTIM_TRIG_CFG = LPTIM_LPTCFG_TRIGCFG_POS;//外部输入信号上升沿trigger	init_para.LPTIM_FLTEN = ENABLE;//使能数字滤波		init_para.LPTIM_LPTIN_EDGE = LPTIM_LPTCFG_EDGESEL_POS;		init_para.LPTIM_CLK_SEL = LPTIM_LPTCFG_CLKSEL_LSCLK;//选择LPTIMER的时钟源	init_para.LPTIM_CLK_DIV = LPTIM_LPTCFG_DIVSEL_1;//设置分频值	init_para.LPTIM_compare_value = 0;//设置比较值	init_para.LPTIM_target_value = 32767;//设置目标值	LPTIM_Init(&init_para);//初始化LPTIMER    //使能LPTIMER的外设中断	NVIC_DisableIRQ(LPTIM_IRQn);	NVIC_SetPriority(LPTIM_IRQn, 2);//	printf("NVIC before\n");	NVIC_EnableIRQ(LPTIM_IRQn);		//	printf("NVIC after\n");}void LPTIMER_COMM_TIMER_DEMO_start(void)//DEMO启动{		LPTIM_LPTIE_OVIE_Setable(ENABLE);//使能LPTIMER的溢出中断	LPTIM_LPTCTRL_LPTEN_Setable(ENABLE);//LPTIMER模块使能}void LPTIMER_COMM_TIMER_stop(void)//DEMO关闭{	LPTIM_LPTIE_OVIE_Setable(DISABLE);//关闭LPTIMER的溢出中断	LPTIM_LPTCTRL_LPTEN_Setable(DISABLE);//LPTIMER模块关闭}uint8_t i;void LPTIM_IRQHandler(void)//普通定时器中断服务程序{		if (LPTIM_LPTIF_OVIF_Chk() == SET)//溢出中断标志被置起	{		LPTIM_LPTIF_OVIF_Clr();//清除中断标志		i++;		if(i == 2)		{			LED0_TOG;			i = 0;			LPTIM->LPTTARGET = (100 & LPTIM_LPTTARGET_TARGET_REG_Msk);		}		else		{			LED1_TOG;			TicksDelayUs(31);			LPTIM->LPTTARGET = (0 & LPTIM_LPTTARGET_TARGET_REG_Msk);		}	}	}int main (void){		Init_System();				//系统初始化  	bsp_uart_init(115200,PARITY_NO);		LPTIMER_COMM_TIMER_DEMO_init();	LPTIMER_COMM_TIMER_DEMO_start();//启动		for( ; ; )	{		IWDT_Clr();	}	}